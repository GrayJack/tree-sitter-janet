{
  "name": "janet",
  "rules": {
    "source_file": {
      "type": "REPEAT",
      "content": {
        "type": "SYMBOL",
        "name": "_anything"
      }
    },
    "_anything": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_literals"
        },
        {
          "type": "SYMBOL",
          "name": "_identifier"
        },
        {
          "type": "SYMBOL",
          "name": "_s_expr"
        }
      ]
    },
    "_s_expr": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "SYMBOL",
          "name": "_anything"
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "_literals": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "bool_literal"
        },
        {
          "type": "SYMBOL",
          "name": "nil_literal"
        },
        {
          "type": "SYMBOL",
          "name": "number_literal"
        },
        {
          "type": "SYMBOL",
          "name": "str_literal"
        },
        {
          "type": "SYMBOL",
          "name": "long_str_literal"
        },
        {
          "type": "SYMBOL",
          "name": "buffer_literal"
        },
        {
          "type": "SYMBOL",
          "name": "long_buffer_literal"
        }
      ]
    },
    "str_literal": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "\""
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "PATTERN",
                "value": "[^\"\\\\]+"
              },
              {
                "type": "SYMBOL",
                "name": "escape_sequence"
              }
            ]
          }
        },
        {
          "type": "STRING",
          "value": "\""
        }
      ]
    },
    "long_str_literal": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "``"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "PATTERN",
                "value": "[^`\\\\]+"
              },
              {
                "type": "SYMBOL",
                "name": "escape_sequence"
              }
            ]
          }
        },
        {
          "type": "STRING",
          "value": "``"
        }
      ]
    },
    "buffer_literal": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "@\""
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "PATTERN",
                "value": "[^\"\\\\]+"
              },
              {
                "type": "SYMBOL",
                "name": "escape_sequence"
              }
            ]
          }
        },
        {
          "type": "STRING",
          "value": "\""
        }
      ]
    },
    "long_buffer_literal": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "@``"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "PATTERN",
                "value": "[^`\\\\]+"
              },
              {
                "type": "SYMBOL",
                "name": "escape_sequence"
              }
            ]
          }
        },
        {
          "type": "STRING",
          "value": "``"
        }
      ]
    },
    "number_literal": {
      "type": "CHOICE",
      "members": [
        {
          "type": "PATTERN",
          "value": "[-+]?(\\d[_\\d]*|\\d[_\\d]*\\.[_\\d]*|\\.[_\\d]+)([eE&][+-]?[\\d]+)?"
        },
        {
          "type": "PATTERN",
          "value": "[-+]?0x([_\\da-fA-F]+|[_\\da-fA-F]+\\.[_\\da-fA-F]*|\\.[_\\da-fA-F]+)(&[+-]?[\\da-fA-F]+)?"
        },
        {
          "type": "PATTERN",
          "value": "[-+]?\\d\\d?r([_\\w]+|[_\\w]+\\.[_\\w]*|\\.[_\\w]+)(&[+-]?[\\w]+)?"
        }
      ]
    },
    "bool_literal": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "true"
        },
        {
          "type": "STRING",
          "value": "false"
        }
      ]
    },
    "nil_literal": {
      "type": "STRING",
      "value": "nil"
    },
    "escape_sequence": {
      "type": "IMMEDIATE_TOKEN",
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "STRING",
            "value": "\\"
          },
          {
            "type": "CHOICE",
            "members": [
              {
                "type": "PATTERN",
                "value": "[^xu]"
              },
              {
                "type": "PATTERN",
                "value": "u[0-9a-fA-F]{4}"
              },
              {
                "type": "PATTERN",
                "value": "u{[0-9a-fA-F]+}"
              },
              {
                "type": "PATTERN",
                "value": "x[0-9a-fA-F]{2}"
              }
            ]
          }
        ]
      }
    },
    "_identifier": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "symbol"
        },
        {
          "type": "SYMBOL",
          "name": "keyword"
        }
      ]
    },
    "keyword": {
      "type": "PATTERN",
      "value": ":[a-zA-Zα-ωΑ-Ω0-9µ!@$%^&*_+=|~:<>.?\\\\-]*"
    },
    "symbol": {
      "type": "PATTERN",
      "value": "[a-zA-Zα-ωΑ-Ωµ!@$%^&*_+=|~<>.?\\\\-][a-zA-Zα-ωΑ-Ω0-9µ!@$%^&*_+=|~:<>.?\\\\-]*"
    }
  },
  "extras": [
    {
      "type": "PATTERN",
      "value": "\\s"
    }
  ],
  "conflicts": [],
  "externals": [],
  "inline": [],
  "supertypes": []
}

