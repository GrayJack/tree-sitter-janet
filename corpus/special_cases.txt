============================================
PEG Set
============================================

(set "abc")
(set "a")

---

(source_file
  (peg_set
    (str_literal))
  (peg_set
    (str_literal)))

============================================
Extra defs
============================================

(defmacro macro [a])
(defn double [x] (* x 2))
(defn- double [x] (* x 2))
(defn double :private "doc" [x] (* x 2))
(defn double "doc" :private [x] (* x 2))
(varfn double [x] (* x 2))
(varfn- double [x] (* x 2))
(defmacro my-macro [x] (* x 2))
(defmacro- my-macro [x] (* x 2))
(defn func [a [b c]] (* a b c))
(defn 'name ;'mods [pars] 'args)
(defn 'name ;'mods 'par 'args)

---

(source_file
  (extra_defs
    name: (symbol)
    parameters: (parameters
      parameter: (symbol)))
  (extra_defs
    name: (symbol)
    parameters: (parameters
      parameter: (symbol))
    body: (body
      form: (tuple
        item: (symbol)
        item: (symbol)
        item: (number_literal))))
  (extra_defs
    name: (symbol)
    parameters: (parameters
      parameter: (symbol))
    body: (body
      form: (tuple
        item: (symbol)
        item: (symbol)
        item: (number_literal))))
  (extra_defs
    name: (symbol)
    metadata: (metadata
      (keyword))
    metadata: (metadata
      (str_literal))
    parameters: (parameters
      parameter: (symbol))
    body: (body
      form: (tuple
        item: (symbol)
        item: (symbol)
        item: (number_literal))))
  (extra_defs
    name: (symbol)
    metadata: (metadata
      (str_literal))
    metadata: (metadata
      (keyword))
    parameters: (parameters
      parameter: (symbol))
    body: (body
      form: (tuple
        item: (symbol)
        item: (symbol)
        item: (number_literal))))
  (extra_defs
    name: (symbol)
    parameters: (parameters
      parameter: (symbol))
    body: (body
      form: (tuple
        item: (symbol)
        item: (symbol)
        item: (number_literal))))
  (extra_defs
    name: (symbol)
    parameters: (parameters
      parameter: (symbol))
    body: (body
      form: (tuple
        item: (symbol)
        item: (symbol)
        item: (number_literal))))
  (extra_defs
    name: (symbol)
    parameters: (parameters
      parameter: (symbol))
    body: (body
      form: (tuple
        item: (symbol)
        item: (symbol)
        item: (number_literal))))
  (extra_defs
    name: (symbol)
    parameters: (parameters
      parameter: (symbol))
    body: (body
      form: (tuple
        item: (symbol)
        item: (symbol)
        item: (number_literal))))
  (extra_defs
    name: (symbol)
    parameters: (parameters
      parameter: (symbol)
      parameter: (sqr_tuple
        item: (symbol)
        item: (symbol)))
    body: (body
      form: (tuple
        item: (symbol)
        item: (symbol)
        item: (symbol)
        item: (symbol))))
  (extra_defs
    name: (short_quote
      (symbol))
    metadata: (metadata
      (short_splice
        (short_quote
          (symbol))))
    parameters: (parameters
      parameter: (symbol))
    body: (body
      form: (short_quote
        (symbol))))
  (extra_defs
    name: (short_quote
      (symbol))
    metadata: (metadata
      (short_splice
        (short_quote
          (symbol))))
    metadata: (metadata
      (short_quote
        (symbol)))
    parameters: (short_quote
      (symbol))))
